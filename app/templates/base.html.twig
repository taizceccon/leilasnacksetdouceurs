<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

  {% block meta %}
    <meta name="description" content="Douceurs & Snacks de Leila - Des gourmandises artisanales livr√©es chez vous avec amour." />
    <meta name="keywords" content="snacks, douceurs, sucreries, artisanales, Leila, confiseries, livraison" />
    <meta name="author" content="Leila Snacks" />
    <meta name="robots" content="index, follow" />
    <meta property="og:title" content="Douceurs & Snacks de Leila" />
    <meta property="og:description" content="Des snacks et douceurs faits avec amour pour tous vos moments gourmands." />
    <meta property="og:image" content="{{ asset('images/meta-preview.jpg') }}" />
    <meta property="og:url" content="{{ app.request.uri }}" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' https://cdn.tailwindcss.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src https://fonts.gstatic.com;">  {# CSP pour √©viter les injections #}

  {% endblock %}

  <title>{% block title %}Douceurs & Snacks de Leila{% endblock %}</title>

  <link rel="icon" href="/favicon.ico" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;500;700&family=Poppins:wght@400;600&family=Playfair+Display:wght@700&display=swap" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  {# <link href="/build/tailwind.css" rel="stylesheet"> #}

  <script>
    
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  </script>

  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            roseFonce: '#C4847C',
            jaunePale: '#caa449ff',
            bleuMenthe: '#259bb3ff',
            cr√®me: '#fff9cdff',
            vertSauge: '#30a459ff',
            ros√©: '#E5C1BD',
            fondDark: '#1b1b1b',
            texteClair: '#f3f3f3',
            menthe: '#1494adff',
          },
        },
      },
    };
  </script>

  {% block stylesheets %}    
     <link rel="stylesheet" href="/css/style.css" />  
  {% endblock %}

</head>
<body class="min-h-screen flex flex-col bg-creme text-gray-800 dark:bg-fondDark dark:text-texteClair font-sans">
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-0 focus:left-0 bg-white text-black p-2 z-50">
        Aller directement au contenu principal
    </a>
  {% include 'header.html.twig' %}

  {% for label, messages in app.flashes %}
    {% for message in messages %}
      <div class="bg-green-100 border border-green-300 text-green-800 px-4 py-2 rounded mb-4 text-sm">
        {{ message }}
      </div>
    {% endfor %}
  {% endfor %}
    <main id="main-content" class="flex-grow bg-white dark:bg-[#1b1b1b] text-black dark:text-white">
        {% block body %}{% endblock %}
    </main>

 {% include 'footer.html.twig' %}

  {% block javascripts %}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Mobile menu
      const burgerBtn = document.getElementById('burger-button');
      const mobileMenu = document.getElementById('mobile-menu');
      if (burgerBtn && mobileMenu) {
        burgerBtn.addEventListener('click', () => {
          const expanded = burgerBtn.getAttribute('aria-expanded') === 'true';
          burgerBtn.setAttribute('aria-expanded', !expanded);
          mobileMenu.classList.toggle('hidden');
        });
      }  
      // Dark mode toggle
      const themeToggleBtn = document.getElementById('theme-toggle');
      const themeIcon = document.getElementById('theme-icon');
      if (themeToggleBtn && themeIcon) {
        themeToggleBtn.addEventListener('click', () => {
          const html = document.documentElement;
          const isDark = html.classList.toggle('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
          themeToggleBtn.setAttribute('aria-pressed', isDark);
          themeIcon.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
        });
      }
      // Update panier avec AJAX
      document.querySelectorAll('form[action*="cart/update"]').forEach(form => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          const input = form.querySelector('input[name="quantity"]');
          const quantity = input.value;
          const action = form.getAttribute('action');

          fetch(action, {
            method: 'POST',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({ quantity })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              const row = form.closest('tr') || form.closest('.flex.flex-col');
              const subtotalCell = row?.querySelector('.js-subtotal');
              if (subtotalCell) {
                subtotalCell.textContent = `${data.subtotal} ‚Ç¨`;
              }
              document.querySelectorAll('.js-cart-total').forEach(el => {
                el.textContent = `Total : ${data.total} ‚Ç¨`;
              });
            } else {
              alert(data.message || 'Erreur lors de la mise √† jour.');
            }
          })
          .catch(() => {
            alert('Une erreur est survenue.');
          });
        });
      });

      // compteur panier
      document.querySelectorAll('.add-to-cart-button').forEach(button => {
        button.addEventListener('click', () => {
          const countEl = document.getElementById('cart-count');
          let current = parseInt(countEl.textContent) || 0;
          current++;
          countEl.textContent = current;
          countEl.classList.remove('hidden');
        });
      });
    });
  </script>
  {% endblock %}

</body>
</html>